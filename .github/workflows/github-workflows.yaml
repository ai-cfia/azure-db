---
name: ai-cfia workflows

on:
  pull_request:
    types:
      - opened
      - closed
      - synchronize

jobs:
  get-changed-files:
    name: Get Changed Files
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.changed-files.outputs.all_changed_files }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            azure-ai-search/**
  azure-ai-search-version-bump:
    needs: get-changed-files
    if: github.event.pull_request.merged != true && contains(needs.get-changed-files.outputs.files, 'azure-ai-search/')
    name: azure-ai-search-version-bump
    uses: ai-cfia/github-workflows/.github/workflows/workflow-version-bump-python.yml@162-provide-support-for-version-bump-when-a-setuppy-file-is-used
    secrets: inherit
    with:
      pyproject-path: 'azure-ai-search/setup.py'
      package-name: 'azure-ai-search'
  list-packages:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: |
          echo "Finding package directories..."
          PACKAGES=$(find . -maxdepth 1 -type d -exec test -e '{}/requirements.txt' \; -print | sed 's|^\./||' | jq -R . | jq -cs .)
          echo "matrix=${PACKAGES}" >> $GITHUB_OUTPUT

  lint-test:
    needs: list-packages
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.list-packages.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11.x"
          cache: "pip"

      - name: Install dependencies for ${{ matrix.package }}
        run: |
          if [ -f ${{ matrix.package }}/requirements.txt ]; then
            python -m pip install --upgrade pip
            pip install -r ${{ matrix.package }}/requirements.txt
          fi
          pip install ruff==0.1.0

      - name: Lint with ruff (selected rules) in ${{ matrix.package }}
        run: |
          ruff --output-format=github --select=E9,F63,F7,F82 --target-version=py311 ${{ matrix.package }}
          ruff --output-format=github --target-version=py311 ${{ matrix.package }}

      - name: Test with unittest in ${{ matrix.package }}
        run: |
          cd ${{ matrix.package }}
          python -m unittest discover -s tests
        env:
          FINESSE_BACKEND_AZURE_SEARCH_ENDPOINT: ${{ secrets.FINESSE_BACKEND_AZURE_SEARCH_ENDPOINT }}
          FINESSE_BACKEND_AZURE_SEARCH_API_KEY: ${{ secrets.FINESSE_BACKEND_AZURE_SEARCH_API_KEY }}
          FINESSE_BACKEND_AZURE_SEARCH_INDEX_NAME: ${{ secrets.FINESSE_BACKEND_AZURE_SEARCH_INDEX_NAME }}

  markdown-check:
    uses: ai-cfia/github-workflows/.github/workflows/workflow-markdown-check.yml@main
    secrets: inherit

  repo-standard:
    uses: ai-cfia/github-workflows/.github/workflows/workflow-repo-standards-validation.yml@main
    secrets: inherit

  trigger-release:
    name: Trigger release workflow
    needs: get-changed-files
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Trigger Release Workflow for azure-ai-search
        if: contains(needs.get-changed-files.outputs.files, 'azure-ai-search/setup.py')
        run: |
          gh workflow run publish-package.yml \
          --ref main \
          -f package-name=azure-ai-search
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
